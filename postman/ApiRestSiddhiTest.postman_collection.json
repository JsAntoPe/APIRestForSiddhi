{
	"info": {
		"_postman_id": "1bb93da0-a3b7-45ea-89d8-b9127c2182c2",
		"name": "ApiRestSiddhiTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Patterns",
			"item": [
				{
					"name": "Create Pattern",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"Stock aggregation pattern\",\n    \"inputStreamNames\": [\"StockEvent\"],\n    \"outputStreamName\": \"AggregateStockStream\",\n    \"patternCode\": \"from StockEvent#window.time(5 sec) select sum(volume) as volume, symbol, sum(price) as price group by symbol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pattern No Price",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"Stock aggregation pattern\",\n    \"inputStreamNames\": [\"StockEvent\"],\n    \"outputStreamName\": \"AggregateStockStream\",\n    \"patternCode\": \"from StockEvent#window.time(5 sec) select sum(volume) as volume, symbol, group by symbol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pattern No symbol",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"Stock aggregation pattern\",\n    \"inputStreamNames\": [\"StockEvent\"],\n    \"outputStreamName\": \"AggregateStockStream\",\n    \"patternCode\": \"from StockEvent#window.time(5 sec) select sum(volume) as volume, sum(price) as price group by symbol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pattern Wrong Structure",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"Stock aggregation pattern\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Streams",
			"item": [
				{
					"name": "Streams CRUD",
					"item": [
						{
							"name": "Add Input Stream",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"streamID\": \"StockEvent\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"StockEvent\",\n        \"description\": \"Schema for Stock Event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"symbol\":   { \"type\": \"string\" },\n            \"price\":    { \"type\": \"number\" },\n            \"volume\":   { \"type\": \"number\" }\n        },\n        \"required\": [\"symbol\", \"price\", \"volume\"],\n        \"additionalProperties\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/streams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Input Stream",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/v1/streams/StockEvent",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams",
										"StockEvent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Input Stream",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/streams/StockEvent",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams",
										"StockEvent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Output Stream",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"streamID\": \"AggregateStockStream\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"AggregateStockStream\",\n        \"description\": \"Schema for AggregateStockStream Event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"symbol\":   { \"type\": \"string\" },\n            \"price\":    { \"type\": \"number\" },\n            \"volume\":   { \"type\": \"number\" }\n        },\n        \"required\": [\"symbol\", \"price\", \"volume\"],\n        \"additionalProperties\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/streams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Streams Events",
					"item": [
						{
							"name": "Send Event",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"price\": 100.0,\n\t\"volume\": 100.0,\n\t\"symbol\": \"IBM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/streams/StockEvent/events",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams",
										"StockEvent",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Event Incorrect Event",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"symbol\": \"IBM\",\n\t\"price\": 100,\n\t\"volume\": 100,\n\t\"fail\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v1/streams/StockEvent/events",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"streams",
										"StockEvent",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Create Subscription",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\": \"webhookMock\",\n    \"method\": \"POST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/StockEvent/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"StockEvent",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subscription 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\": \"webhookMock2\",\n    \"method\": \"GET\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/StockEvent/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"StockEvent",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get StockEvent Subscriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/StockEvent/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"StockEvent",
								"subscriptions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Air Quality Use Case",
			"item": [
				{
					"name": "AirMesurement",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"AirMesurement\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"AirMesurement\",\n        \"description\": \"Schema for Air Mesurement event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"timestamp\": { \"type\": \"number\" },\n            \"stationID\": { \"type\": \"integer\" },\n            \"location\": { \"type\": \"string\" },\n            \"pm2_5\": { \"type\": \"number\" },\n            \"pm10\": { \"type\": \"number\" },\n            \"o3\": { \"type\": \"number\" },\n            \"no2\": { \"type\": \"number\" },\n            \"so2\": { \"type\": \"number\" },\n            \"co\": { \"type\": \"number\" }\n        },\n        \"required\": [\"timestamp\", \"stationID\", \"location\", \"pm2_5\", \"pm10\", \"o3\", \"no2\", \"so2\", \"co\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirMesurement Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"AirMesurement\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"AirMesurement\",\n        \"description\": \"Schema for Air Mesurement event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"timestamp\": { \"type\": \"number\" },\n            \"stationID\": { \"type\": \"integer\" },\n            \"location\": { \"type\": \"string\" },\n            \"pm2_5\": { \"type\": \"number\" },\n            \"pm10\": { \"type\": \"number\" },\n            \"o3\": { \"type\": \"number\" },\n            \"no2\": { \"type\": \"number\" },\n            \"so2\": { \"type\": \"number\" },\n            \"co\": { \"type\": \"number\" }\n        },\n        \"required\": [\"timestamp\", \"stationID\", \"location\", \"pm2_5\", \"pm10\", \"o3\", \"no2\", \"so2\", \"co\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "NO2_Avg",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"NO2_Avg\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"NO2_Avg\",\n        \"description\": \"Schema for NO2_Avg event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"stationId\": { \"type\": \"integer\" },\n            \"value\": { \"type\": \"number\" }\n        },\n        \"required\": [\"stationId\", \"value\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "PollutantLevel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"PollutantLevel\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"PollutantLevel\",\n        \"description\": \"Schema for Pollutant Level event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"stationId\": { \"type\": \"integer\" },\n            \"levelNumber\": { \"type\": \"number\" },\n            \"levelName\": { \"type\": \"string\" }\n        },\n        \"required\": [\"stationId\", \"levelNumber\", \"levelName\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirQualityLevel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"AirQualityLevel\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"AirQualityLevel\",\n        \"description\": \"Schema for Air Quality event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"stationId\": { \"type\": \"integer\" },\n            \"level\": { \"type\": \"number\" }\n        },\n        \"required\": [\"stationId\", \"level\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirQualityLevel Subscription",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\": \"http://127.0.0.1:8081\",\n    \"method\": \"POST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/AirQualityLevel/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"AirQualityLevel",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "NO2_Avg Pattern",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"NO2_Avg pattern\",\n    \"inputStreamNames\": [\"AirMesurement\"],\n    \"outputStreamName\": \"NO2_Avg\",\n    \"patternCode\": \"define window AirMesurementWindow (timestamp double, stationID int, location string, pm2_5 double, pm10 double, o3 double, no2 double, so2 double, co double) time(1 hours); from AirMesurement select * insert into AirMesurementWindow; from (every a1 = AirMesurementWindow) select a1.stationID as stationId, avg(a1.no2) as value group by a1.stationID\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "NO2_Avg Pattern No window",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"NO2_Avg pattern\",\n    \"inputStreamNames\": [\"AirMesurement\"],\n    \"outputStreamName\": \"NO2_Avg\",\n    \"patternCode\": \"from (every a1 = AirMesurement) select a1.stationID as stationId, avg(a1.no2) as value group by a1.stationID\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "PollutantLevel Pattern",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"PollutantLevel pattern\",\n    \"inputStreamNames\": [\"NO2_Avg\"],\n    \"outputStreamName\": \"PollutantLevel\",\n    \"patternCode\": \"define window NO2_AvgWindow (stationId int, value double) lengthBatch(10); from NO2_Avg select * insert into NO2_AvgWindow; from (every a1 = NO2_AvgWindow[(a1.value >= 0.0 and a1.value < 54.0)])select a1.stationId as stationId, 1 as levelNumber, 'NO2_Good' as levelName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "PollutantLevel Pattern No Window",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"PollutantLevel pattern\",\n    \"inputStreamNames\": [\"NO2_Avg\"],\n    \"outputStreamName\": \"PollutantLevel\",\n    \"patternCode\": \" from (every a1 = NO2_Avg[(a1.value >= 0.0 and a1.value < 54.0)]) select a1.stationId as stationId, 1.0 as levelNumber, \\\"NO2_Good\\\" as levelName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirQualityLevel Pattern",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"AirQualityLevel pattern\",\n    \"inputStreamNames\": [\"PollutantLevel\"],\n    \"outputStreamName\": \"AirQualityLevel\",\n    \"patternCode\": \"define window PollutantLevelWindow (stationId int, levelNumber double, levelName string) timeBatch(5 minutes);from PollutantLevel select * insert into PollutantLevelWindow; from (every a1 = PollutantLevelWindow) select a1.stationId as stationId, max(a1.levelNumber) as levelgroup by a1.stationId\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirQualityLevel Pattern No Window",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"AirQualityLevel pattern\",\n    \"inputStreamNames\": [\"PollutantLevel\"],\n    \"outputStreamName\": \"AirQualityLevel\",\n    \"patternCode\": \"from (every a1 = PollutantLevel) select a1.stationId as stationId, max(a1.levelNumber) as level group by a1.stationId\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirMesurement Event 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": 2.0,\n    \"stationID\": 1,\n    \"location\": \"Cadiz\",\n    \"pm2_5\": 10.0,\n    \"pm10\": 10.0,\n    \"o3\": 10.0,\n    \"no2\": 10.0,\n    \"so2\": 10.0,\n    \"co\": 10.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/streams/AirMesurement/events",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"AirMesurement",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "AirMesurement Event 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": 1.0,\n    \"stationID\": 1,\n    \"location\": \"Cadiz\",\n    \"pm2_5\": 10.0,\n    \"pm10\": 10.0,\n    \"o3\": 10.0,\n    \"no2\": 10.0,\n    \"so2\": 10.0,\n    \"co\": 10.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/streams/AirMesurement/events",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"AirMesurement",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "NO2_Avg Event 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"stationId\": 1,\n    \"value\": 10.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/NO2_Avg/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"NO2_Avg",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PollutantLevel Subscriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/PollutantLevel/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"PollutantLevel",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AirQualityLevel Subscriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/AirQualityLevel/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"AirQualityLevel",
								"subscriptions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Two Streams Use Case",
			"item": [
				{
					"name": "Create Stream Evento 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"Evento1\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"Evento1\",\n        \"description\": \"Schema for Evento1 event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"ID\": { \"type\": \"integer\" },\n            \"value1\": { \"type\": \"number\" }\n        },\n        \"required\": [\"ID\", \"value1\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stream Evento 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"Evento2\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"Evento2\",\n        \"description\": \"Schema for Evento2 event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"ID\": { \"type\": \"integer\" },\n            \"value2\": { \"type\": \"number\" }\n        },\n        \"required\": [\"ID\", \"value2\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stream Join Stream",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"streamID\": \"JoinStream\",\n    \"jsonSchema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"$id\": \"http://example.com/product.schema.json\",\n        \"title\": \"JoinStream\",\n        \"description\": \"Schema for JoinStream event\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"value\": { \"type\": \"number\" }\n        },\n        \"required\": [\"value\"],\n        \"additionalProperties\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pattern Two Input Streams",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patternName\": \"Two streams pattern\",\n    \"inputStreamNames\": [\"Evento1\", \"Evento2\"],\n    \"outputStreamName\": \"JoinStream\",\n    \"patternCode\": \"from (every Evento1) -> Evento2 select Evento1.value1 + Evento2.value2 as value\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/patterns/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"patterns",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Stream Subscription",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\": \"http://127.0.0.1:8081\",\n    \"method\": \"POST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/streams/JoinStream/subscriptions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"JoinStream",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Event 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ID\": 1,\n    \"value1\": 10.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/streams/Evento1/events",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"Evento1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Event 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ID\": 1,\n    \"value2\": 10.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/streams/Evento2/events",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"streams",
								"Evento2",
								"events"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}